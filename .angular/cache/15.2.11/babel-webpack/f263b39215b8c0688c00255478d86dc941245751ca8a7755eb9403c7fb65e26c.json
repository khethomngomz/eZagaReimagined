{"ast":null,"code":"import { NavigationEnd, NavigationStart } from '@angular/router';\nimport PerfectScrollbar from 'perfect-scrollbar';\nimport { filter } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let AdminLayoutComponent = /*#__PURE__*/(() => {\n  class AdminLayoutComponent {\n    _router;\n    // url: string;\n    url;\n    location;\n    lastPoppedUrl;\n    yScrollStack = [];\n    router;\n    navbar;\n    ngOnInit() {\n      const elemMainPanel = document.querySelector('.main-panel');\n      const elemSidebar = document.querySelector('.sidebar .sidebar-wrapper');\n      this.location.subscribe(ev => {\n        this.lastPoppedUrl = ev.url;\n      });\n      this.router.events.subscribe(event => {\n        if (event instanceof NavigationStart) {\n          if (event.url != this.lastPoppedUrl) this.yScrollStack.push(window.scrollY);\n        } else if (event instanceof NavigationEnd) {\n          if (event.url == this.lastPoppedUrl) {\n            this.lastPoppedUrl = undefined;\n            window.scrollTo(0, this.yScrollStack.pop());\n          } else window.scrollTo(0, 0);\n        }\n      });\n      this._router = this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n        elemMainPanel.scrollTop = 0;\n        elemSidebar.scrollTop = 0;\n      });\n      const html = document.getElementsByTagName('html')[0];\n      if (window.matchMedia(`(min-width: 960px)`).matches && !this.isMac()) {\n        let ps = new PerfectScrollbar(elemMainPanel);\n        ps = new PerfectScrollbar(elemSidebar);\n        html.classList.add('perfect-scrollbar-on');\n      } else {\n        html.classList.add('perfect-scrollbar-off');\n      }\n      this._router = this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n        this.navbar.sidebarClose();\n      });\n    }\n    isMap() {\n      // console.log(this.location.prepareExternalUrl(this.location.path()));\n      if (this.location.prepareExternalUrl(this.location.path()) == '#/maps/fullscreen') {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    isMac() {\n      let bool = false;\n      if (navigator.platform.toUpperCase().indexOf('MAC') >= 0 || navigator.platform.toUpperCase().indexOf('IPAD') >= 0) {\n        bool = true;\n      }\n      return bool;\n    }\n    static ɵfac = function AdminLayoutComponent_Factory(t) {\n      return new (t || AdminLayoutComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AdminLayoutComponent,\n      selectors: [[\"app-layout\"]],\n      decls: 1,\n      vars: 0,\n      template: function AdminLayoutComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"router-outlet\");\n        }\n      },\n      dependencies: [i1.RouterOutlet],\n      encapsulation: 2\n    });\n  }\n  return AdminLayoutComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}